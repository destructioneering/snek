# Hello, welcome to Snek.

# Snek is a subset of Python, which means
# you don't have to learn any new syntax to
# watch the garbage collector.

# But it has a lot less stuff than Python.
# Here's the rundown of what you can do:

# Variables

a = 2
b = 5

# Print

print(a * b)

# A bunch of math operators

print(3 + 4 * 2 / (1 - 5)**2**3)

# If statements

if a == b:
    print('equal')
elif a > b:
    print('a is greater')
else:
    print('b is greater')

# While loops (but not for loops)

i = 0
while i < 10:
    print(i)
    i += 1

# Functions

def add(x, y):
    return x + y

print(add(a, b))

# Classes (without inheritance)

class Tree:
    def __init__(self, age, species):
        self.age = age
        self.species = species

    def addYear(self):
        self.age += 1

    def show(self):
        print('age: ', self.age, ', species: ', self.species)

tree = Tree(10, 'conifer')

tree.addYear()
tree.show()

print(tree.age)

# Lambdas (and closures)

def multiplier(n):
    return lambda x: n * x

# f is a function that multiplies a number
# by 3.
f = multiplier(3)

print(f(10))

# Let's look at a linked list.

class Node:
    def __init__(self, data):
        self.data = data
        self.nn = None

    def append(self, data):
        head = self
        while head.nn != None:
            head = head.nn
        head.nn = Node(data)
        return self

    def show(self):
        while self != None:
            print(self.data)
            self = self.nn

node = Node(1).append(2).append(3)
node.show()

graph()
